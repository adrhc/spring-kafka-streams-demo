spring.application.name=kstreams1
# spring.kafka
spring.kafka.bootstrap-servers=127.0.0.1:9092
# spring.kafka.streams
spring.kafka.streams.bootstrap-servers=${spring.kafka.bootstrap-servers}
spring.kafka.streams.client-id=${spring.application.name}-client
spring.kafka.streams.auto-startup=true
spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.value.serde=org.springframework.kafka.support.serializer.JsonSerde
spring.kafka.streams.properties.default.windowed.key.serde.inner=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.windowed.value.serde.inner=org.springframework.kafka.support.serializer.JsonSerde
spring.kafka.streams.properties.default.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
spring.kafka.streams.properties.default.timestamp.extractor=ro.go.adrhc.springkafkastreams.util.streams.TransactionTimestampExtractor
spring.kafka.streams.properties.topology.optimization=all
spring.kafka.streams.properties.processing.guarantee=exactly_once
spring.kafka.streams.properties.spring.json.trusted.packages=*
#
# spring.kafka.consumer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.client-id=consumer-${spring.kafka.streams.client-id}
spring.kafka.consumer.group-id=group-${spring.kafka.streams.client-id}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.key.default.type=org.apache.kafka.common.utils.Bytes
spring.kafka.consumer.properties.spring.json.value.default.type=org.apache.kafka.common.utils.Bytes
spring.kafka.consumer.properties.spring.json.trusted.packages=*
#
# spring.kafka.producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.client-id=producer-${spring.kafka.streams.client-id}
#
# topics: see profiles
topic.persons=persons.${version}
topic.persons-upper=persons-upper.${version}
topic.stars=stars-${topic.starsAsStream}.${version}
topic.stars-multiplied=stars-multiplied-${topic.starsAsStream}.${version}
topic.persons-stars=persons-stars-${topic.starsAsStream}.${version}
topic.starsAsStream=false
topic.transactions=transactions.${version}
topic.daily-total-spent=daily-total-spent.${version}
topic.daily-exceeded=daily-exceeded.${version}
topic.client-profile=client-profile.${version}
#
# logging
logging.level.ro.go.adrhc.springkafkastreams=debug
logging.level.org.springframework.kafka.config.StreamsBuilderFactoryBean=debug
logging.level.org.apache.kafka=warn
