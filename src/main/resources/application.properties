#spring.profiles.active=v2
spring.application.name=ksd1
# spring.kafka
spring.kafka.bootstrap-servers=localhost:9092
# confluent
schema.registry.url=http://localhost:8081
# spring.kafka.streams
spring.kafka.streams.bootstrap-servers=${spring.kafka.bootstrap-servers}
# Kafka streams application.id property defaults to spring.application.name
spring.kafka.streams.client-id=${spring.application.name}-client
spring.kafka.streams.auto-startup=true
spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.value.serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.kafka.streams.properties.schema.registry.url=${schema.registry.url}
spring.kafka.streams.properties.default.windowed.key.serde.inner=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.windowed.value.serde.inner=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.kafka.streams.properties.default.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
spring.kafka.streams.properties.default.timestamp.extractor=ro.go.adrhc.springkafkastreams.util.streams.CustomTimestampExtractor
spring.kafka.streams.properties.num.stream.threads=4
spring.kafka.streams.properties.topology.optimization=all
spring.kafka.streams.properties.processing.guarantee=exactly_once
spring.kafka.streams.properties.spring.json.trusted.packages=*
#
# spring.kafka.consumer
spring.kafka.consumer.client-id=consumer-${spring.kafka.streams.client-id}
spring.kafka.consumer.group-id=group-${spring.kafka.streams.client-id}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url=${schema.registry.url}
spring.kafka.consumer.properties.specific.avro.reader=true
spring.kafka.consumer.properties.spring.json.key.default.type=org.apache.kafka.common.utils.Bytes
spring.kafka.consumer.properties.spring.json.value.default.type=org.apache.kafka.common.utils.Bytes
spring.kafka.consumer.properties.spring.json.trusted.packages=*
#
# spring.kafka.producer
spring.kafka.producer.client-id=producer-${spring.kafka.streams.client-id}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=${schema.registry.url}
#
# topics: see profiles
topic.prefix=${spring.application.name}
topic.transactions=${topic.prefix}.transactions.${app.version}
topic.daily-total-spent=${topic.prefix}.daily-total-spent.${app.version}
topic.daily-exceeds=${topic.prefix}.daily-exceeds.${app.version}
topic.client-profiles=${topic.prefix}.client-profiles.${app.version}
topic.period-total-spent=${topic.prefix}.period-total-spent.${app.version}
topic.period-exceeds=${topic.prefix}.period-exceeds.${app.version}
topic.commands=${topic.prefix}.commands.${app.version}
# app specific configs
app.window-size=3
app.window-unit=DAYS
app.kafka-enhanced=false
app.daily-grace=5
app.period-grace=${app.daily-grace}
app.currency=EURO
#
# logging
logging.level.ro.go.adrhc.springkafkastreams=debug
logging.level.org.springframework.kafka.config.StreamsBuilderFactoryBean=debug
logging.level.org.springframework.kafka.listener=info
logging.level.org.apache.kafka=info
