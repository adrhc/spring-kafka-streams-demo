spring.application.name=adrhc-kstreams
# spring.kafka.streams
spring.kafka.streams.bootstrap-servers=127.0.0.1:9092
spring.kafka.streams.client-id=client-id
spring.kafka.streams.auto-startup=true
spring.kafka.streams.properties.processing.guarantee=exactly_once
spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.value.serde=org.springframework.kafka.support.serializer.JsonSerde
spring.kafka.streams.properties.default.windowed.key.serde.inner=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.windowed.value.serde.inner=org.springframework.kafka.support.serializer.JsonSerde
spring.kafka.streams.properties.spring.json.trusted.packages=*
#
# spring.kafka.producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.client-id=ktemplate-${spring.kafka.streams.client-id}
#spring.kafka.producer.properties.spring.json.type.mapping=person:ro.go.adrhc.springkafkastreams.persons.Person
#
# topics: see profiles
topic.persons=bad/topic
topic.persons-upper=bad/topic-upper
